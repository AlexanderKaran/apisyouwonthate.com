# Conclusion

Thank you for reading the whole way through this book. This was a large and complex topic which I
tried to turn into an interesting read with some humor.

It has been a really enjoyable experience and I have been blown away with the positive feedback.
I have also received plenty of constructive criticism for which I am also grateful.

I will continue to maintain this book and I have some requests, suggestions and general ideas for
improvements to make. But, if you have read this then the meat of the book is now the same as it will
always be. 

For example, I plan to;

* Improve the Behat test coverage on the sample application.
* Implement [league\oauth2-server](https://github.com/thephpleague/oauth2-server) for the PHP sample app.

A dilemma I am having currently is that any further explanation of RESTful API development is just going to
be paraphrasing content in the [HTTP 1.1 Specification]. RESTful APIs respect as many aspects of the HTTP
spec as possible, so headers like `Accept-Language`, `Expires`, `Etag`, `Retry-After`, etc could be
catered for. A whole book could be written about the HTTP spec itself, so it seems somewhat outside
the scope of this book. I will probably add in one last chapter on caching at a later point and leave it
there.

This has been a great project, and a much needed break from writing code non-stop 24/7. Back to it I guess!

[HTTP 1.1 Specification]: http://www.w3.org/Protocols/rfc2616/rfc2616.html

# Further Reading

Here are some books that you should consider reading. While are not directly about API development, they are
about related subjects. APIs must be secure. APIs need to be tested. APIs need virtual machines to run on, 
and they need provisioning tools to keep those virtual machines in check. 

[Building Secure PHP Apps] - Is your PHP app truly secure? Let's make sure you get home on time and sleep well at night.

[The Grumpy Programmer's PHPUnit Cookbook] - Learning how to use PHPUnit doesn't have to suck. Your code is untested and fixing bugs is tedious. You know you need something better, but time just doesn't seem to be on your side. Making things "right" is costly and you need to deliver working code NOW.

[Vagrant Cookbook] - Learn how to create effective Vagrant development environments. This book will cover from basic to advanced concepts on Vagrant, including important ProTips to improve your Vagrant projects and avoid common mistakes. The book was updated to cover the new features on Vagrant 1.5, which are substantial
compared to previous versions.

[Laravel 4 Cookbook] - This book is contains various projects built in the Laravel 4 framework, written by
a well known Laravel 4 developer from sunny South Africa.


[Vagrant Cookbook]: https://leanpub.com/vagrantcookbook
[Laravel 4 Cookbook]: https://leanpub.com/laravel4cookbook
[Laravel Testing Decoded]: https://leanpub.com/laravel-testing-decoded
[The Grumpy Programmer's PHPUnit Cookbook]: https://leanpub.com/grumpy-phpunit
[Building Secure PHP Apps]: https://leanpub.com/buildingsecurephpapps