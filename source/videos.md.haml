---
title: Videos // APIs You Won't Hate
---

.hero.section.section--primary
  .container
    .hero__content.section--large
      %h2 Videos %p Can't make it to the big conferences in Paris, London, or
      San Francisco? we get it! We've all got local bars to keep up appearances
      at, bike races to train for, and pet turtles don't feed themselves!

      %p Grab these mini conference talks, and watch then whenever you fancy.

    .hero__aside.section--large
      .ebook-small
        %img{ src: "/images/videos.jpg", width: '500px' }

%section.section.section--large
  .container.container--medium
    %h2 Taking a Break from Dodgy Dependencies

    %p Is your architecture an octopus orgy of unstable systems, where one domino
    can fall and knock over everything else? This talk looks at timeouts,
    retries and circuit breakers, to add control to the chaos.

    %iframe{ width: "615", height: 345, src: "https://www.youtube.com/embed/oVtufG8Cu3U", frameborder: "0", allow: 'autoplay; encrypted-media', allowfullscreen: true }

%section.section.section--large
  .container.container--medium

    %h2 HTTP Caching

    %p Mini conference talk covering HTTP caching, mostly caching client
    responses via HTTP middleware to skip making requests the client already has
    fresh answers to, then using conditional validation to check if things have
    changed.

    %p Conditional validation is one of the least understood but most powerful
    features for HTTP, but it's simple when you get the hang of it!

    %p Make your applications quicker, save mangling application servers when
    you don't need to, and we'll even throw in some hints towards network
    caching to really help iron out stampeding herds.

    %iframe{ width: "615", height: 345, src: "https://www.youtube.com/embed/761puUy8ir4", frameborder: "0", allow: 'autoplay; encrypted-media', allowfullscreen: true }

%section.section.section--large
  .container.container--medium

    %h2 A No Nonsense GraphQL and REST Comparison

    %p Folks who don't understand what REST and HATEOAS mean keep acting like
    GraphQL is somehow a replacement. It is amazing, and I'll explain why, but
    they're two different things, used for different things!

    %iframe{ width: "615", height: 345, src: "https://www.youtube.com/embed/vgm_uGmspMI", frameborder: "0", allow: 'autoplay; encrypted-media', allowfullscreen: true }

    // .shopify-product{'data-id': '430314029092', 'data-label': 'Grab this video for $8.00 (USD)'}

= partial 'partials/subscribe'
